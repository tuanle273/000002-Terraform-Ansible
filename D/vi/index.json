[
{
	"uri": "//localhost:1313/vi/",
	"title": "Terraform - Ansible",
	"tags": [],
	"description": "",
	"content": "Sử dụng Terraform kết hợp Ansible deploy webapp Tổng quan Trong bài lab này, chúng ta sẽ tìm hiểu các khái niệm và các cách để thực hiện triển khai một ứng dụng cơ bản bằng cách sử dụng Terraform kết hợp với Ansible\nNội dung Giới thiệu Các bước chuẩn bị Tạo kết nối đến máy chủ EC2 Quản lý session logs Port Forwarding Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-installpackage/",
	"title": "Cài đặt các thành phần",
	"tags": [],
	"description": "",
	"content": "Trong workshop này, chúng ta sẽ tìm hiểu và thực hiện 1 bài lab đơn giản về Terraform và Ansible theo từng bước dưới đây\nTổng quan kiến trúc sau khi các bạn hoàn tất bước này sẽ như sau:\nNội dung Tạo VPC Tạo Public subnet Tạo Private subnet Tạo security group Tạo máy chủ Linux public Tạo máy chủ Windows private "
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Terraform và Ansible là hai công cụ mạnh mẽ và phổ biến được sử dụng để tự động hóa quy trình triển khai hạ tầng và ứng dụng.\nTerraform\nTerraform là một công cụ Infrastructure as Code (IaC) do HashiCorp phát triển, cho phép người dùng định nghĩa, xem trước và áp dụng các thay đổi hạ tầng trên nhiều nhà cung cấp dịch vụ đám mây khác nhau như AWS, Azure, Google Cloud Platform, và nhiều hơn nữa. Terraform sử dụng một ngôn ngữ khai báo có tên là HashiCorp Configuration Language (HCL) để mô tả hạ tầng dưới dạng mã.\nBằng cách sử dụng Terraform, chúng ta có thể tự động hóa việc tạo và quản lý các tài nguyên hạ tầng như máy ảo, mạng, bộ nhớ, và các dịch vụ khác, giúp đảm bảo rằng môi trường hạ tầng luôn nhất quán và có thể tái tạo được.\nAnsible\nAnsible là một công cụ tự động hóa mã nguồn mở do Red Hat phát triển, được sử dụng để cấu hình hệ thống, triển khai phần mềm và điều phối các tác vụ khác trên hạ tầng CNTT.\nAnsible hoạt động theo mô hình \u0026ldquo;agentless\u0026rdquo; (không cần cài đặt agent trên các máy chủ đích) và sử dụng SSH để kết nối và thực thi các tác vụ trên máy chủ từ xa.\nVới Ansible, chúng ta có thể tự động hóa việc cài đặt và cấu hình phần mềm, triển khai ứng dụng và thực hiện các tác vụ quản lý hệ thống khác thông qua các playbook - các tệp YAML mô tả các tác vụ cần thực hiện.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-installpackage/2.1.1-createiamuser/",
	"title": "Tạo Private Windows EC2",
	"tags": [],
	"description": "",
	"content": " Truy cập giao diện quản trị dịch vụ EC2 Click Instances. Click Launch instances. Tại trang Step 1: Choose an Amazon Machine Image (AMI). Kéo chuột xuống phía dưới. Click Select để lựa chọn AMI Microsoft Windows Server 2019 Base. Tại trang Step 2: Choose an Instance Type. Click chọn Instance type t2.micro. Click Next: Configure Instance Details. Tại trang Step 3: Configure Instance Details Tại mục Network chọn Lab VPC. Tại mục Subnet chọn Lab Private Subnet. Tại mục Auto-assign Public IP chọn Use subnet setting (Disable) Click Next: Add Storage. Click Next: Add Tags để chuyển sang bước kế tiếp. Click Next: Configure Security Group để chuyển sang bước kế tiếp. Tại trang Step 6: Configure Security Group. Chọn Select an existing security group. Chọn security group SG Private Windows Instance. Click Review and Launch. Hộp thoại cảnh báo hiện lên vì chúng ta không cấu hình tường lửa cho phép kết nối vào port 22, Click Continue để tiếp tục.\nTại trang Step 7: Review Instance Launch.\nClick Launch. Tại hộp thoại Select an existing key pair or create a new key pair. Click chọn Choose an existing key pair. Tại mục Key pair name chọn LabKeypair. Click chọn I acknowledge that I have access to the corresponding private key file, and that without this file, I won\u0026rsquo;t be able to log into my instance.. Click Launch Instances để tạo máy chủ EC2. Click View Instances để quay lại danh mục EC2 instances.\nClick vào biểu tượng edit dưới cột Name.\nTại hộp thoại Edit Name điền Private Windows Instance. Click Save. Tiếp theo chúng ta sẽ tiến hành tạo các IAM Role để phục vụ cho Session Manager.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Điều kiện:\nIDE VSCode, Terraform, Ansible đã cài đặt trên máy thực hiện Tài khoản AWS IAM Nội dung Cài đặt Terraform Tạo IAM Role "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-installpackage/2.1.2-installterraform/",
	"title": "Cài đặt Terraform",
	"tags": [],
	"description": "",
	"content": "Cài đặt Terraform trên Windows Bạn có thể cài đặt Terraform trên Windows một cách dễ dàng bằng cách sử dụng Chocolatey, một trình quản lý gói phổ biến cho Windows. Dưới đây là các bước hướng dẫn chi tiết:\nBước 1: Cài đặt Chocolatey Nếu bạn chưa cài đặt Chocolatey, hãy làm theo các bước sau:\nMở PowerShell với quyền Quản trị:\nTìm kiếm \u0026ldquo;PowerShell\u0026rdquo; trong menu Start, nhấp chuột phải và chọn \u0026ldquo;Run as Administrator\u0026rdquo;. Cài đặt Chocolatey:\nSao chép và dán lệnh sau vào PowerShell và nhấn Enter: powershell Copy code\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\nChờ cho quá trình cài đặt hoàn tất.\nBước 2: Cài đặt Terraform bằng Chocolatey Cài đặt Terraform:\nMở PowerShell với quyền Quản trị (nếu chưa mở). Chạy lệnh sau để cài đặt Terraform:\nchoco install terraform -y\nKiểm tra cài đặt:\nSau khi quá trình cài đặt hoàn tất, bạn có thể kiểm tra phiên bản Terraform đã được cài đặt bằng lệnh:\nterraform --version\nBước 3: Terraform đã được cài đặt thành công Nếu Terraform đã được cài đặt thành công, bạn sẽ thấy phiên bản của Terraform hiển thị trong PowerShell.\nTerraform v1.5.0\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-createiamrole/",
	"title": "Tạo IAM Role",
	"tags": [],
	"description": "",
	"content": "Tạo IAM Role Trong bước này chúng ta sẽ tiến hành tạo IAM Role. Trong IAM Role này sẽ được gán policy AmazonSSMManagedInstanceCore, đây là policy cho phép máy chủ EC2 có thể giao tiếp với Session Manager.\nTruy cập vào giao diện quản trị dịch vụ IAM Ở thanh điều hướng bên trái, click Roles. Click Create role. Click AWS service và click EC2. Click Next: Permissions. Trong ô Search, điền AmazonSSMManagedInstanceCore và ấn phím Enter để tìm kiếm policy này. Click chọn policy AmazonSSMManagedInstanceCore. Click Next: Tags. Click Next: Review. Đặt tên cho Role là SSM-Role ở Role Name Click Create Role . Tiếp theo chúng ta sẽ thực hiện kết nối đến các máy chủ EC2 chúng ta đã tạo bằng Session Manager.\n"
},
{
	"uri": "//localhost:1313/vi/3-deploy/",
	"title": "Triển khai ứng dụng",
	"tags": [],
	"description": "",
	"content": "1.Chuẩn bị 1 file để deploy 1 ứng dụng đơn giản /code\nNội dung Cài đặt Terraform Tạo IAM Role "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-installpackage/2.1.3-installansible/",
	"title": "Tạo Public subnet",
	"tags": [],
	"description": "",
	"content": "Tạo Public subnet Click Subnets. Click Create subnet. Tại trang Create subnet. Tại mục VPC ID click chọn Lab VPC. Tại mục Subnet name điền Lab Public Subnet. Tại mục Availability Zone chọn Availability zone đầu tiên. Tại mục IPv4 CIRD block điền 10.10.1.0/24. Kéo xuống cuối trang , click Create subnet.\nClick chọn Lab Public Subnet.\nClick Actions. Click Edit subnet settings. Click chọn Enable auto-assign public IPv4 address. Click Save. Click Internet Gateways. Click Create internet gateway. Tại trang Create internet gateway. Tại mục Name tag điền Lab IGW. Click Create internet gateway. Sau khi tạo thành công, click Actions. Click Attach to VPC. Tại trang Attach to VPC. Tại mục Available VPCs chọn Lab VPC. Click Attach internet gateway. Kiểm tra quá trình attach thành công như hình dưới. Tiếp theo chúng ta sẽ tạo một custom route table để gán vào Lab Public Subnet. Click Route Tables. Click Create route table. Tại trang Create route table. Tại mục Name, điền Lab Publicrtb. Tại mục VPC, chọn Lab VPC. Click Create route table. Sau khi tạo route table thành công. Click Edit routes. Tại trang Edit routes. Click Add route. Tại mục Destination điền 0.0.0.0/0 Tại mục Target chọn Internet Gateway sau đó chọn Lab IGW. Click Save changes. Click tab Subnet associations. Click Edit subnet associations để tiến hành associate custom routable chúng ta vừa tạo vào Lab Public Subnet. Tại trang Edit subnet associations. Click chọn Lab Public Subnet. Click Save associations. Kiểm tra thông tin route table đã được associate với Lab Public Subnet và thông tin route đi internet đã được trỏ đến Internet Gateway như hình dưới. "
},
{
	"uri": "//localhost:1313/vi/4-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa EC2 instance Tại terminal của folder Terraform Dùng lệnh terraform destroy. Chọn Y để xác nhận. "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]