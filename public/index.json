[
{
	"uri": "//localhost:1313/",
	"title": "Terraform - Ansible",
	"tags": [],
	"description": "",
	"content": "Sử dụng Terraform kết hợp Ansible deploy webapp Tổng quan Trong bài lab này, chúng ta sẽ tìm hiểu các khái niệm và các cách để thực hiện triển khai một ứng dụng cơ bản bằng cách sử dụng Terraform kết hợp với Ansible\nContent Introductio222n Preparation Connect to EC2 instance Manage session logs Port Forwarding Clean up resources "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-installpackage/",
	"title": "Cài đặt các thành phần",
	"tags": [],
	"description": "",
	"content": "Trong workshop này, chúng ta sẽ tìm hiểu và thực hiện 1 bài lab đơn giản về Terraform và Ansible theo từng bước dưới đây\nTổng quan kiến trúc sau khi các bạn hoàn tất bước này sẽ như sau:\n"
},
{
	"uri": "//localhost:1313/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Terraform và Ansible là hai công cụ mạnh mẽ và phổ biến được sử dụng để tự động hóa quy trình triển khai hạ tầng và ứng dụng.\nTerraform\nTerraform là một công cụ Infrastructure as Code (IaC) do HashiCorp phát triển, cho phép người dùng định nghĩa, xem trước và áp dụng các thay đổi hạ tầng trên nhiều nhà cung cấp dịch vụ đám mây khác nhau như AWS, Azure, Google Cloud Platform, và nhiều hơn nữa. Terraform sử dụng một ngôn ngữ khai báo có tên là HashiCorp Configuration Language (HCL) để mô tả hạ tầng dưới dạng mã.\nBằng cách sử dụng Terraform, chúng ta có thể tự động hóa việc tạo và quản lý các tài nguyên hạ tầng như máy ảo, mạng, bộ nhớ, và các dịch vụ khác, giúp đảm bảo rằng môi trường hạ tầng luôn nhất quán và có thể tái tạo được.\nAnsible\nAnsible là một công cụ tự động hóa mã nguồn mở do Red Hat phát triển, được sử dụng để cấu hình hệ thống, triển khai phần mềm và điều phối các tác vụ khác trên hạ tầng CNTT.\nAnsible hoạt động theo mô hình \u0026ldquo;agentless\u0026rdquo; (không cần cài đặt agent trên các máy chủ đích) và sử dụng SSH để kết nối và thực thi các tác vụ trên máy chủ từ xa.\nVới Ansible, chúng ta có thể tự động hóa việc cài đặt và cấu hình phần mềm, triển khai ứng dụng và thực hiện các tác vụ quản lý hệ thống khác thông qua các playbook - các tệp YAML mô tả các tác vụ cần thực hiện.\n"
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-installpackage/2.1.1-createiamuser/",
	"title": "Prepare AWS Env",
	"tags": [],
	"description": "",
	"content": " Go to IAM management console or Find in search bar IAM. Click IAM. Click Users from left bar. Create new user IAM with name Attach permission: AmazonEC2FullAccess, AmazonVPCFullAccess, IAMFullAccess, AmazonS3FullAccess,CloudWatchFullAccess. Click to user was created. Click Sercurity credential. Click Create new access key. Save it and add to AWS CLI Configure AWS CLI Download the AWS CLI Installer Visit the AWS CLI official download page.\nUnder \u0026ldquo;Windows\u0026rdquo;, click on the \u0026ldquo;MSI installer\u0026rdquo; link to download the installer file.\nRun the Installer Locate the downloaded .msi file (usually in your \u0026ldquo;Downloads\u0026rdquo; folder). Double-click the file to run the installer.\nFollow the Installation Instructions The installation wizard will guide you through the setup process. Click \u0026ldquo;Next\u0026rdquo; to proceed with the default settings. Accept the license agreement and continue by clicking \u0026ldquo;Next\u0026rdquo;. Choose the installation folder or leave it as the default. Click \u0026ldquo;Next\u0026rdquo;. Click \u0026ldquo;Install\u0026rdquo; to begin the installation. After the installation is complete, click \u0026ldquo;Finish\u0026rdquo; to close the installer.\nVerify the Installation Open the Command Prompt or PowerShell. Type aws \u0026ndash;version and press Enter. You should see the AWS CLI version information, indicating that the installation was successful.\nConfigure the AWS CLI To configure the AWS CLI, run the following command in your Command Prompt or PowerShell:\naws configure\nInput AWS Access Key ID \u0026amp; AWS Secret Access Key "
},
{
	"uri": "//localhost:1313/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Điều kiện:\nIDE VSCode, Terraform, Ansible đã cài đặt trên máy thực hiện Tài khoản AWS IAM Nội dung Cài đặt Terraform Tạo IAM Role "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-installpackage/2.1.2-installterraform/",
	"title": "Install Terraform",
	"tags": [],
	"description": "",
	"content": "Cài đặt Terraform trên Windows Bước 1: Cài đặt Chocolatey Nếu bạn chưa cài đặt Chocolatey, hãy làm theo các bước sau:\nMở PowerShell với quyền Quản trị:\nTìm kiếm \u0026ldquo;PowerShell\u0026rdquo; trong menu Start, nhấp chuột phải và chọn \u0026ldquo;Run as Administrator\u0026rdquo;. Cài đặt Chocolatey:\nSao chép và dán lệnh sau vào PowerShell và nhấn Enter: powershell Copy code\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\nChờ cho quá trình cài đặt hoàn tất.\nBước 2: Cài đặt Terraform bằng Chocolatey Cài đặt Terraform:\nMở PowerShell với quyền Quản trị (nếu chưa mở). Chạy lệnh sau để cài đặt Terraform:\nchoco install terraform -y\nBước 3: Sau khi quá trình cài đặt hoàn tất, bạn có thể kiểm tra phiên bản Terraform đã được cài đặt bằng lệnh:\nterraform --version\nNếu Terraform đã được cài đặt thành công, bạn sẽ thấy phiên bản của Terraform hiển thị trong PowerShell.\n"
},
{
	"uri": "//localhost:1313/3-deploy/",
	"title": "Triển khai ứng dụng",
	"tags": [],
	"description": "",
	"content": " Chuẩn bị file cài đặt cơ bản: terraform init\nmain.tf với nội dung: provider \u0026#34;aws\u0026#34; { region = \u0026#34;ap-southeast-1\u0026#34; } resource \u0026#34;tls_private_key\u0026#34; \u0026#34;key\u0026#34; { algorithm = \u0026#34;RSA\u0026#34; } resource \u0026#34;aws_key_pair\u0026#34; \u0026#34;key_pair\u0026#34; { key_name = \u0026#34;ansible-key\u0026#34; public_key = tls_private_key.key.public_key_openssh } resource \u0026#34;local_sensitive_file\u0026#34; \u0026#34;private_key\u0026#34; { filename = \u0026#34;${path.module}/ansible.pem\u0026#34; content = tls_private_key.key.private_key_pem file_permission = \u0026#34;0400\u0026#34; } resource \u0026#34;aws_security_group\u0026#34; \u0026#34;allow_ssh\u0026#34; { ingress { from_port = 22 to_port = 22 protocol = \u0026#34;tcp\u0026#34; cidr_blocks = [\u0026#34;0.0.0.0/0\u0026#34;] } ingress { from_port = 80 to_port = 80 protocol = \u0026#34;tcp\u0026#34; cidr_blocks = [\u0026#34;0.0.0.0/0\u0026#34;] } egress { from_port = 0 to_port = 0 protocol = \u0026#34;-1\u0026#34; cidr_blocks = [\u0026#34;0.0.0.0/0\u0026#34;] } } resource \u0026#34;aws_instance\u0026#34; \u0026#34;ansible_server\u0026#34; { ami = \u0026#34;ami-0d07675d294f17973\u0026#34; instance_type = \u0026#34;t2.micro\u0026#34; vpc_security_group_ids = [aws_security_group.allow_ssh.id] key_name = aws_key_pair.key_pair.key_name provisioner \u0026#34;remote-exec\u0026#34; { inline = [ \u0026#34;sudo yum update -y\u0026#34;, \u0026#34;sudo yum install -y software-properties-common\u0026#34;, \u0026#34;sudo yum-add-repository --yes --update ppa:ansible/ansible\u0026#34;, \u0026#34;sudo yum install -y ansible\u0026#34; ] connection { type = \u0026#34;ssh\u0026#34; user = \u0026#34;ec2-user\u0026#34; private_key = tls_private_key.key.private_key_pem host = self.public_ip } } provisioner \u0026#34;local-exec\u0026#34; { command = \u0026#34;ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -u ec2-user --key-file ansible.pem -T 300 -i \u0026#39;${self.public_ip},\u0026#39;, playbook.yaml\u0026#34; } tags = { Name = \u0026#34;Nginx Server\u0026#34; } } Thêm file playbook.yaml với nội dung: - name: Install and Configure Nginx hosts: all become: true tasks: - name: Install Nginx yum: name: nginx state: present # Sử dụng \u0026#39;apt\u0026#39; nếu hệ thống của bạn là Debian/Ubuntu # apt: # name: nginx # state: present when: ansible_os_family == \u0026#34;RedHat\u0026#34; - name: Ensure /var/www/html directory exists file: path: /usr/share/nginx/html state: directory mode: \u0026#34;0755\u0026#34; - name: Add index page template: src: index.html dest: /usr/share/nginx/html/index.html - name: Start and enable Nginx service service: name: nginx state: started enabled: true Chạy câu lệnh dưới đây để tạo resource EC2 và triển khai web đơn giản bằng ansible terraform plan terraform apply Vào IP public của EC2, web đã được triển khai thành công "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-installpackage/2.1.3-installansible/",
	"title": "Cài đặt Ansible",
	"tags": [],
	"description": "",
	"content": "Cài đặt Ansible trên Windows Bước 1: Cài đặt Chocolatey (nếu chưa cài đặt) Mở PowerShell với quyền Quản trị (Run as Administrator):\nNhấn phím Windows, tìm \u0026ldquo;PowerShell\u0026rdquo;, nhấp chuột phải và chọn \u0026ldquo;Run as Administrator\u0026rdquo;. Cài đặt Chocolatey:\nSao chép và dán lệnh sau vào PowerShell và nhấn Enter:\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\nBước 2: Cài đặt Ansible bằng Chocolatey\nMở lại PowerShell với quyền Quản trị (nếu chưa mở).\nCài đặt Ansible bằng cách chạy lệnh sau trong PowerShell:\nchoco install ansible -y\nBước 3: Kiểm tra cài đặt Ansible Sau khi cài đặt xong, kiểm tra xem Ansible đã được cài đặt thành công hay chưa bằng cách chạy lệnh sau trong PowerShell:\nansible --version\n"
},
{
	"uri": "//localhost:1313/4-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa EC2 instance Tại terminal của folder Terraform Dùng lệnh terraform destroy. Chọn Y để xác nhận. "
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]